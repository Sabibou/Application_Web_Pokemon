Une API aide à utiliser un bout de logiciel dans un autre par exemple l'utilisation des librairies.
On va utiliser l'API HTTP
Question 1

Fonctionnalités :
    Récupérer les données
    Donner un pokémon au hasard chaque jour
    Echanger les pokémons
        Utilisateur propose un échange visible par tous
    Inscription/Connexion
    Faire un XP un pokémon(monter en niveau)

Question 2

Les classes seront créees dans entity
EDéclaration des tables de le bdd dans /DAO/_Initializer
Effectuer les contrôles dans core 

Principales classes 
    Joueur
        ID unique
        liste de pokémons
        identifiant
        mot de passe
        date de dernière Connexion
        nombre de pokémons qui ont été XP
        liste d'échanges
    Pokémon possédé
        nom
        Spite (url vers son image/avatar)
        identifiant unique
        id pokedex
        niveau
        Utilisateur
        Echange
    Echange
        id unique
        pokemon(juste l'id pour la bdd)
        date
        liste de pokemons voulus(id pokedex)
        statut de l'échange(en attente, refuse, accepté, annulé)

Question 3

    Joueur
        id int primary key auto-increment,
        identifiant(pseudo) varchar(64) unique,
        password varchar(255),
        last_connection timestamp,
        nb_pok_xp int;

    pokemon
        id int primary key auto-increment,
        id_pokedex int,
        level int,
        name varchar(64),
        sprite varchar(255),
        user_id int references joueur.id NOT NULL,
        
    Echange 
        id int primary key auto-increment,
        pokemon_id int references pokemon.id NOT NULL,
        date timestamp DEFAULT NOW(),
        state int DEFAULT 0(waiting);

    Echange voulu
        id_echange int references echange.id,
        id_pokedex int;


URI 
    POST/register
    GET/user-id/new-pokemon
    POST/user-id/liste-pokemons/pokemon-id
    POST/pokemon-id/level-up
    GET/echange




